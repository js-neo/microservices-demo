

services:
  kafka:
    image: bitnami/kafka:3.6
    hostname: kafka
    ports:
      - "9092:9092"
      - "9999:9999"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_JMX_PORT=9999
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_MIN_INSYNC_REPLICAS=1
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
    volumes:
      - kafka_data:/bitnami
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions.sh --bootstrap-server kafka:9092"]
      interval: 10s
      timeout: 10s
      start_period: 60s
      retries: 10
    restart: unless-stopped

  order-service:
    build: ./order-service
    ports:
      - "3001:3001"
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC_ORDERS=order-created
      - PORT=3001
      - KAFKAJS_NO_PARTITIONER_WARNING=1
      - KAFKA_PRODUCER_IDEMPOTENCE=true
      - KAFKA_TRANSACTIONAL_ID=order-service-producer
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  driver-service:
    build: ./driver-service
    ports:
      - "3002:3002"
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC_ORDERS=order-created
      - PORT=3002
      - KAFKA_CONSUMER_SESSION_TIMEOUT=45000
      - KAFKA_CONSUMER_HEARTBEAT_INTERVAL=15000
      - KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS=300000
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  notification-service:
    build: ./notification-service
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC_ORDERS=order-created
      - KAFKA_GROUP_ID=notification-group
      - KAFKA_CONSUMER_SESSION_TIMEOUT=45000
      - KAFKA_CONSUMER_HEARTBEAT_INTERVAL=15000
      - KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS=300000
      - KAFKA_LOG_LEVEL=INFO
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'node src/kafka.js' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  kafka_data:
    driver: local